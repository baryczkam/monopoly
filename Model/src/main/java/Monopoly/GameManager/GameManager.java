package Monopoly.GameManager;

import Monopoly.Board.*;
import Monopoly.Player.Bank;
import Monopoly.SpecialCard.*;

import java.util.ArrayList;
import java.util.List;

public class GameManager {

    public void initializeBoard(){
        List<PropertyField> propertyFields = new ArrayList<>();
        List<SpecialCard> specialCards = new ArrayList<>();
        Bank bank = new Bank(propertyFields);
        StartField field1 = new StartField(0);
        PropertyField field2 = new DistrictField(1,60,bank,2,ColorDistrictField.BROWN);
        SocialCashCardField field3 = new SocialCashCardField(2);
        PropertyField field4 = new DistrictField(3,60,bank,4,ColorDistrictField.BROWN);
        TaxField field5 = new TaxField(4,200);
        StationField field6 = new StationField(5,200,bank,25);
        PropertyField field7 = new DistrictField(6,100,bank,6,ColorDistrictField.AQUAMARINE);
        ChanceCardField field8 = new ChanceCardField(7);
        PropertyField field9 = new DistrictField(8,100,bank,6,ColorDistrictField.AQUAMARINE);
        PropertyField field10 = new DistrictField(9,120,bank,8,ColorDistrictField.AQUAMARINE);
        JailField field11 = new JailField(10);
        PropertyField field12 = new DistrictField(11,140,bank,10,ColorDistrictField.PURPLE);
        FactoryField field13 = new FactoryField(12,150,bank,4);
        PropertyField field14 = new DistrictField(13,140,bank,10,ColorDistrictField.PURPLE);
        PropertyField field15 = new DistrictField(14,160,bank,12,ColorDistrictField.PURPLE);
        StationField field16 = new StationField(15,200,bank,25);
        PropertyField field17 = new DistrictField(16,180,bank,14,ColorDistrictField.ORANGE);
        SocialCashCardField field18 = new SocialCashCardField(17);
        PropertyField field19 = new DistrictField(18,180,bank,14,ColorDistrictField.ORANGE);
        PropertyField field20 = new DistrictField(19,200,bank,16,ColorDistrictField.ORANGE);
        ParkingField field21 = new ParkingField(20,0);
        PropertyField field22 = new DistrictField(21,220,bank,18,ColorDistrictField.RED);
        ChanceCardField field23 = new ChanceCardField(22);
        PropertyField field24 = new DistrictField(23,220,bank,18,ColorDistrictField.RED);
        PropertyField field25 = new DistrictField(24,240,bank,20,ColorDistrictField.RED);
        StationField field26 = new StationField(25,200,bank,25);
        PropertyField field27 = new DistrictField(26,260,bank,22,ColorDistrictField.YELLOW);
        PropertyField field28 = new DistrictField(27,260,bank,22,ColorDistrictField.YELLOW);
        FactoryField field29 = new FactoryField(28,150,bank,4);
        PropertyField field30 = new DistrictField(29,280,bank,24,ColorDistrictField.YELLOW);
        GoToJailField field31 = new GoToJailField(30);
        PropertyField field32 = new DistrictField(31,300,bank,26,ColorDistrictField.GREEN);
        PropertyField field33 = new DistrictField(32,300,bank,26,ColorDistrictField.GREEN);
        SocialCashCardField field34 = new SocialCashCardField(33);
        PropertyField field35 = new DistrictField(34,320,bank,28,ColorDistrictField.GREEN);
        StationField field36 = new StationField(35,200,bank,25);
        ChanceCardField field37 = new ChanceCardField(36);
        PropertyField field38 = new DistrictField(37,350,bank,35,ColorDistrictField.BLUE);
        TaxField field39 = new TaxField(38,100);
        PropertyField field40 = new DistrictField(39,400,bank,50,ColorDistrictField.BLUE);
        List<Field> fields = new ArrayList<>();
        fields.add(field1);
        fields.add(field2);
        fields.add(field3);
        fields.add(field4);
        fields.add(field5);
        fields.add(field6);
        fields.add(field7);
        fields.add(field8);
        fields.add(field9);
        fields.add(field10);
        fields.add(field11);
        fields.add(field12);
        fields.add(field13);
        fields.add(field14);
        fields.add(field15);
        fields.add(field16);
        fields.add(field17);
        fields.add(field18);
        fields.add(field19);
        fields.add(field20);
        fields.add(field21);
        fields.add(field22);
        fields.add(field23);
        fields.add(field24);
        fields.add(field25);
        fields.add(field26);
        fields.add(field27);
        fields.add(field28);
        fields.add(field29);
        fields.add(field30);
        fields.add(field31);
        fields.add(field32);
        fields.add(field33);
        fields.add(field34);
        fields.add(field35);
        fields.add(field36);
        fields.add(field37);
        fields.add(field38);
        fields.add(field39);
        fields.add(field40);
        propertyFields.add(field2);
        propertyFields.add(field4);
        propertyFields.add(field6);
        propertyFields.add(field7);
        propertyFields.add(field9);
        propertyFields.add(field10);
        propertyFields.add(field12);
        propertyFields.add(field13);
        propertyFields.add(field14);
        propertyFields.add(field15);
        propertyFields.add(field16);
        propertyFields.add(field17);
        propertyFields.add(field19);
        propertyFields.add(field20);
        propertyFields.add(field22);
        propertyFields.add(field24);
        propertyFields.add(field25);
        propertyFields.add(field26);
        propertyFields.add(field27);
        propertyFields.add(field28);
        propertyFields.add(field29);
        propertyFields.add(field30);
        propertyFields.add(field32);
        propertyFields.add(field33);
        propertyFields.add(field35);
        propertyFields.add(field36);
        propertyFields.add(field38);
        propertyFields.add(field40);

        Board.getInstance(fields,specialCards);
        // karty szansa
        GoToStartCard card1 = new GoToStartCard();
        MoveFieldCard card2 = new MoveFieldCard(field6);
        MoveFieldCard card3 = new MoveFieldCard(field25);
        MoveFieldCard card4 = new MoveFieldCard(field12);
        MoveFieldCard card5 = new MoveFieldCard(field40);
        MoveFieldCard card6 = new MoveFieldCard(Board.getInstance(null,null).getStationField());
        MoveFieldCard card7 = new MoveFieldCard(Board.getInstance(null,null).getStationField());
        MoveFieldCard card8 = new MoveFieldCard(field13);
        MoveIndexCard card9 = new MoveIndexCard(-3);
        PayCard card10 = new PayCard(50);
        PayCard card11 = new PayCard(15);
        GiftCard card12 = new GiftCard(150);
        GiftCard card13 = new GiftCard(50);
        RenovationCard card14 = new RenovationCard(25);
        SendToJailCard card15 = new SendToJailCard();
        ReleaseFromJailCard card16 = new ReleaseFromJailCard();
        //karty kasa spoleczna
        GoToStartCard card17 = new GoToStartCard();
        GiftCard card18 = new GiftCard(50);
        PayCard card19 = new PayCard(100);
        PayCard card20 = new PayCard(50);
        PayCard card21 = new PayCard(50);
        GiftCard card22 = new GiftCard(100);
        GiftCard card23 = new GiftCard(100);
        GiftCard card24 = new GiftCard(200);
        GiftCard card25 = new GiftCard(100);
        GiftCard card26 = new GiftCard(20);
        GiftCard card27 = new GiftCard(25);
        GiftCard card28 = new GiftCard(50);
        RenovationCard card29 = new RenovationCard(40);
        GiftCard card30 = new GiftCard(10);
        SendToJailCard card31 = new SendToJailCard();
        ReleaseFromJailCard card32 = new ReleaseFromJailCard();


        specialCards.add(card1);
        specialCards.add(card2);
        specialCards.add(card3);
        specialCards.add(card4);
        specialCards.add(card5);
        specialCards.add(card6);
        specialCards.add(card7);
        specialCards.add(card8);
        specialCards.add(card9);
        specialCards.add(card10);
        specialCards.add(card11);
        specialCards.add(card12);
        specialCards.add(card13);
        specialCards.add(card14);
        specialCards.add(card15);
        specialCards.add(card16);

        specialCards.add(card17);
        specialCards.add(card18);
        specialCards.add(card19);
        specialCards.add(card20);
        specialCards.add(card21);
        specialCards.add(card22);
        specialCards.add(card23);
        specialCards.add(card24);
        specialCards.add(card25);
        specialCards.add(card26);
        specialCards.add(card27);
        specialCards.add(card28);
        specialCards.add(card29);
        specialCards.add(card30);
        specialCards.add(card31);
        specialCards.add(card32);



    }

}
